---
- name: Deploy Consul
  hosts: "{{ _consul_hostgroup }}"
  become: true
  any_errors_fatal: true
  vars_files:
    - main.yml
  tasks:
    - name: Verify role settings
      ansible.builtin.assert:
        that: _consul_role in ['client', 'server']

    - name: Group cluster members
      ansible.builtin.group_by:
        key: "_consul_{{ _consul_role }}"

    - name: Verify cluster group settings
      ansible.builtin.assert:
        that: (groups[_group] | length) in _sizes
        fail_msg: "Number of Consul masters must be one of [{{ _sizes | join(',') }}], found {{ _size }}"
      vars:
        _group: _consul_server
        _size: "{{ groups[_group] | length }}"
        _sizes: [3, 5, 7]

    - name: Release Consul package holds
      block:
        - name: Release Consul apt hold
          ansible.builtin.dpkg_selections:
            name: consul
            selection: install
          when: ansible_os_family == "Debian"
          changed_when: false
          ignore_errors: true

        - name: Release Consul yum lock
          community.general.yum_versionlock:
            name: consul
            state: absent
          when: ansible_os_family == "RedHat"
          changed_when: false

    - name: Deploy Consul cluster
      ansible.builtin.include_role:
        name: nephelaiio.consul.consul
      vars:
        _install_from_repo: "{{ _consul_install_from_repo }}"
        _release_package: "{{ _consul_release_package }}"
        _release_binary: "{{ _consul_release_binary }}"
        consul_version: "{{ _install_from_repo | ternary(_release_package, _release_binary) }}"
        consul_bootstrap_expect: true
        consul_bootstrap_expect_value: "{{ groups[consul_group_name] | length }}"
        consul_group_name: "_consul_server"
        consul_datacenter: "{{ _consul_datacenter | regex_replace('[.]', '_') }}"
        consul_encrypt_enable: false
        consul_os_repo_prerequisites: []
        consul_bin_path: "{{ _install_from_repo | ternary('/usr/bin', '/usr/local/bin') }}"
        consul_install_dependencies: false
        consul_node_role: "{{ _consul_role }}"
        consul_os_packages:
          - unzip
          - acl

    - name: Release Consul package holds
      when:
        - _consul_release is defined
        - _consul_install_from_repo
      block:
        - name: Hold Consul apt package
          ansible.builtin.dpkg_selections:
            name: consul
            selection: hold
          when: ansible_os_family == "Debian"
          changed_when: false

        - name: Lock Consul yum package
          community.general.yum_versionlock:
            name: consul
            state: present
          when: ansible_os_family == "RedHat"
          changed_when: false

    - name: Create Consul backup path
      ansible.builtin.file:
        path: "{{ _consul_backup_path }}"
        state: directory
        owner: consul
        group: "{{ _consul_group }}"
        mode: 0740

    - name: Create Consul backup script
      ansible.builtin.copy:
        dest: "{{ _consul_backup_bin }}"
        content: |
          cd {{ _consul_backup_path }}
          consul snapshot save consul.$(date +%Y%m%d-%H%M%S).snap
          stale_backups=$(find ./ -mindepth 1 -maxdepth 1 -type f -mmin {{ _retention }})
          Removing $(echo $stale_backups | wc -l) expired backups
          echo -n $stale_backups | xargs --no-run-if-empty rm
        owner: consul
        group: consul
        mode: 0755
      vars:
        _retention: "{{ _consul_backup_retention }}"

    - name: Create Consul restore script
      ansible.builtin.copy:
        dest: "{{ _consul_restore_bin }}"
        content: |
          cd {{ _consul_backup_path }}
          if [ $# -eq 0 ]; then
            consul snapshot restore
            backup_files=$(find ./ -mindepth 1 -maxdepth 1 -type f -printf "%f\n")
            if [ "$backup_files" != "" ]; then
              echo Please specify one of the following backup files
              echo $backup_files
            fi
          else
            consul snapshot restore $@
          fi
        owner: consul
        group: consul
        mode: 0755

    - name: Create Consul backup MOTD pointers
      ansible.builtin.copy:
        dest: /etc/update-motd.d/99-consul
        content: |
          #!/usr/bin/env bash
          echo run {{ _consul_backup_bin | basename }} to backup Consul database
          echo run {{ _consul_restore_bin | basename }} to restore Consul database
          echo
        mode: 0755
      when: ansible_os_family == 'Debian'

    - name: Manage Consul backup cronjob
      ansible.builtin.cron:
        name: consul-snapshot
        job: "{{ _consul_backup_bin }} 2>&1"
        minute: "{{ _consul_backup_minutes }}"
        hour: "{{ _consul_backup_hours }}"
        day: "{{ _consul_backup_days }}"
